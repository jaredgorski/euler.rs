
/*
*   Problem 12
*   
*
* The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
*
* 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
*
* Let us list the factors of the first seven triangle numbers:
*
* 1: 1
* 3: 1,3
* 6: 1,2,3,6
* 10: 1,2,5,10
* 15: 1,3,5,15
* 21: 1,3,7,21
* 28: 1,2,4,7,14,28
*
* We can see that 28 is the first triangle number to have over five divisors.
*
* What is the value of the first triangle number to have over five hundred divisors?
*/


pub fn main() {
    println!("Problem 12: {}", solve(500));
}

fn solve(divisors: u64) -> u64 {
    let mut answer: u64 = 0;
    let mut curr: u64 = 1;
    let mut t_nums: Vec<u64> = Vec::new();

    'outer: loop {
        let mut acc: u64 = 0;

        for i in 1..=curr {
            acc += i;
        }

        t_nums.push(acc);

        if acc % 2 == 0 {
            if get_facs_total(acc) > divisors {
                answer = acc;
                break 'outer;
            }
        }

        curr += 1;
    }

    return answer;
}

fn get_facs_total(num: u64) -> u64 {
    let mut facs: Vec<u64> = Vec::new();
    let mut i: u64 = 1;

    while i * i < num {
        if num % i == 0 && !facs.contains(&i) {
            facs.push(i);
            facs.push(num / i);
        }

        i += 1;
    }

    return facs.len() as u64;
}

#[test]
fn p12_test() {
    assert_eq!(
        28,
        solve(5)
    );

    assert_eq!(
        25200,
        solve(50)
    );

    assert_eq!(
        76576500,
        solve(500)
    );
}
